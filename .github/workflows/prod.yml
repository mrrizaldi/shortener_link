name: Build & Deploy to Home Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Build Next.js Application
        run: pnpm build

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGE_USERNAME }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Prepare Docker context
        run: |
          mkdir -p .docker/build
          # Copy Next.js build output (non-standalone)
          cp -r .next .docker/build/
          cp -r public .docker/build/
          # Copy package files for dependencies
          cp package.json .docker/build/
          cp pnpm-lock.yaml .docker/build/
          # Copy source files
          cp -r app .docker/build/
          cp -r pages .docker/build/
          cp next.config.ts .docker/build/
          # Copy Prisma schema and generated client
          cp -r prisma .docker/build/
          cp -r node_modules/.prisma .docker/build/node_modules/ 2>/dev/null || true
          # Copy node_modules
          cp -r node_modules .docker/build/

      - name: Build & Push Docker Image
        run: |
          cd .docker
          docker build -t ghcr.io/mrrizaldi/shortener:latest -f Dockerfile .
          docker push ghcr.io/mrrizaldi/shortener:latest

      - name: Copy docker-compose to Home Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOME_SERVER_IP }}
          username: ${{ secrets.HOME_SERVER_USER }}
          password: ${{ secrets.HOME_SERVER_PASSWORD }}
          proxy_host: ${{ secrets.VPS_IP }}
          proxy_username: ${{ secrets.VPS_USER }}
          proxy_password: ${{ secrets.VPS_PASSWORD }}
          proxy_port: ${{ secrets.VPS_PORT }}
          source: .docker/docker-compose.yml
          target: /home/mrrizaldi/shortener
          strip_components: 1

      - name: Deploy to Home Server via VPS Jump
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOME_SERVER_IP }}
          username: ${{ secrets.HOME_SERVER_USER }}
          password: ${{ secrets.HOME_SERVER_PASSWORD }}
          proxy_host: ${{ secrets.VPS_IP }}
          proxy_username: ${{ secrets.VPS_USER }}
          proxy_password: ${{ secrets.VPS_PASSWORD }}
          proxy_port: ${{ secrets.VPS_PORT }}
          script: |
            cd /home/mrrizaldi/shortener
            docker pull ghcr.io/mrrizaldi/shortener:latest
            docker compose down
            docker compose up -d
